@page "/downloadPlaylist/{PlaylistId:int}"
@attribute [AllowAnonymous]

<PageTitle>
    @localizer[nameof(AppStrings.DownloadPlaylist)]
</PageTitle>

@if (_playlist is not null && _linkInfoList is not null)
{
    <FritzBreadcrumbs Items=_items/>

    <MudItem xs=12>
        <MudPaper Class="pa-4 mt-4"
                  Elevation=3>
            <MudText Typo=Typo.subtitle1
                     Class="mb-2">
                @localizer[nameof(AppStrings.LoadedLinks), _linkInfoList.Count]
            </MudText>
            <MudText Typo=Typo.subtitle2
                     Color="Color.Warning">
                @localizer[nameof(AppStrings.PublicPlaylistDownloadInfo)]
            </MudText>
            <MudText Typo=Typo.subtitle2
                     Color="Color.Warning"
                     Class="mb-2">
                @localizer[nameof(AppStrings.PrivatePlaylistDownloadInfo)]
            </MudText>

            <MudSelect T=YoutubeFileType
                       Label=@localizer[nameof(AppStrings.FileType)]
                       @bind-Value=_youtubeFileType
                       Disabled=_downloading
                       Variant=Variant.Outlined
                       Class="mb-2"
                       UserAttributes=@(new Dictionary<string, object> { { TestConst.TestId, DownloadPlaylistPageConst.YoutubeFileTypeSelect } })>
                @foreach (var youtubeFileType in Enum.GetValues(typeof(YoutubeFileType)))
                {
                    <MudSelectItem T="YoutubeFileType"
                                   Value=(YoutubeFileType)youtubeFileType
                                   UserAttributes=@(new Dictionary<string, object> { { TestConst.TestId, $"download-playlist-page-{(YoutubeFileType)youtubeFileType}" } })>
                        @youtubeFileType.ToString()
                    </MudSelectItem>
                }
            </MudSelect>

            <FritzProcessingButton @ref=_processingButton
                                   Color=Color.Primary
                                   ProcessingButtonText=@localizer[nameof(AppStrings.Downloading)]
                                   ButtonText=@localizer[nameof(AppStrings.Download)]
                                   OnClick=DownloadPlaylistLinks
                                   UserAttributes=@(new Dictionary<string, object> { { TestConst.TestId, DownloadPlaylistPageConst.DownloadButton } })/>

            @if (_downloading)
            {
                <MudProgressLinear Color=Color.Primary
                                   Striped=true
                                   Size=Size.Large
                                   Value=_downloadPercent
                                   Class="my-7"
                                   Style="height: 30px;">
                    <MudText Typo=Typo.h6
                             Style="@($"color:{Colors.Gray.Darken4};")">
                        @((int)_downloadPercent)% - @_downloadingSongTitle
                    </MudText>
                </MudProgressLinear>
            }
        </MudPaper>
    </MudItem>

    @if (_downloadLinkResults is not null)
    {
        <MudItem xs=12>
            <MudPaper Class="pa-4 mt-4"
                      Elevation=3>
                <MudText Typo=Typo.subtitle2>
                    @localizer[nameof(AppStrings.DownloadedLinksCountResults), _downloadLinkResults.Count]
                </MudText>
                @foreach (var result in _downloadLinkResults)
                {
                    @if (result.Success)
                    {
                        <a href="@result.Link.Url" target="_blank">
                            <MudText Color=@Color.Success>
                                [@localizer[nameof(AppStrings.Success)]] - @result.Link.Title
                            </MudText>
                        </a>
                    }
                    else
                    {
                        <a href="@result.Link.Url" target="_blank">
                            <MudText Color=@Color.Error>
                                [@localizer[nameof(AppStrings.Fail)]] - @result.Link.Title
                            </MudText>
                        </a>
                    }
                }
            </MudPaper>
        </MudItem>
    }
}