@inject ILinkApiClient LinkApiClient
@inject IExceptionHandler ExceptionHandler
@inject IStringLocalizer<App> Localizer

<EditForm Model="Command"
          OnValidSubmit="HandleValidSubmit">
    <CustomValidator @ref="CustomValidator" />
    <FluentValidationValidator />

    <MudDialog DefaultFocus="DefaultFocus.LastChild">
        <DialogContent>
            <FritzTextField Label="@Localizer[nameof(AppStrings.Url)]"
                            @bind-Value="Command.Url"
                            For="() => Command.Url" />
            <FritzValidationMessage For="() => Command.Url" />
        </DialogContent>
        <DialogActions>
            <MudButton ButtonType="ButtonType.Submit"
                       Color="Color.Primary">
                @Localizer[nameof(AppStrings.Create)]
            </MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public CreateLink.Command Command { get; set; } = new();

    private CustomValidator CustomValidator = new();

    private async Task HandleValidSubmit()
    {
        try
        {
            await LinkApiClient.CreateLink(Command);
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (MyValidationException validationException)
        {
            CustomValidator.DisplayErrors(validationException.Errors);
        }
        catch (Exception ex)
        {
            ExceptionHandler.HandleExceptions(ex);
        }
    }
}