@page "/resetPassword"
@attribute [AllowAnonymous]

<MudPaper Class="pa-4"
          Elevation="3">
    @if (!_success)
    {
        <MudText>
            @localizer[nameof(AppStrings.ResetPassword)]
        </MudText>

        <EditForm Model="Command"
                  OnValidSubmit="OnValidSubmit">
            <CustomValidator @ref="_customValidator"/>
            <FluentValidationValidator/>

            <FritzPasswordField Label="@localizer[nameof(AppStrings.NewPassword)]"
                                @bind-Value=Command.NewPassword
                                For="() => Command.NewPassword"/>
            <FritzValidationMessage For="() => Command.NewPassword"/>

            <FritzPasswordField Label="@localizer[nameof(AppStrings.RepeatPassword)]"
                                @bind-Value=Command.RepeatPassword
                                For="() => Command.RepeatPassword"/>
            <FritzValidationMessage For="() => Command.RepeatPassword"/>

            <FritzTextField @bind-Value="Command.Email"
                            For="() => Command.Email"
                            HideField="true"/>
            <FritzValidationMessage For="() => Command.Email"/>

            <FritzTextField @bind-Value="Command.Token"
                            For="() => Command.Token"
                            HideField="true"/>
            <FritzValidationMessage For="() => Command.Token"/>

            <FritzProcessingButton @ref="_processingButton"
                                   ButtonType="ButtonType.Submit"
                                   Color="Color.Primary"
                                   ButtonText="@localizer[nameof(AppStrings.ResetPassword)]"/>
        </EditForm>
    }
    else
    {
        <MudText Color=Color.Success>
            @localizer[nameof(AppStrings.ResetPasswordSuccess)]
        </MudText>
    }

    @if (_parsingError)
    {
        <MudText Color=Color.Error>
            @localizer[nameof(AppStrings.InvalidEmailOrToken)]
        </MudText>
    }
</MudPaper>