<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
      Microsoft ResX Schema 
      
      Version 2.0
      
      The primary goals of this format is to allow a simple XML format 
      that is mostly human readable. The generation and parsing of the 
      various data types are done through the TypeConverter classes 
      associated with the data types.
      
      Example:
      
      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>
                  
      There are any number of "resheader" rows that contain simple 
      name/value pairs.
      
      Each data row contains a name, and value. The row also contains a 
      type or mimetype. Type corresponds to a .NET class that support 
      text/value conversion through the TypeConverter architecture. 
      Classes that don't support this are serialized and stored with the 
      mimetype set.
      
      The mimetype is used for serialized objects, and tells the 
      ResXResourceReader how to depersist the object. This is currently not 
      extensible. For a given mimetype the value must be set accordingly:
      
      Note - application/x-microsoft.net.object.binary.base64 is the format 
      that the ResXResourceWriter will generate, however the reader can 
      read any of the formats listed below.
      
      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.
      
      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.
  
      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array 
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"
                id="root"
                xmlns="">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string"/>
                            <xsd:attribute name="type" type="xsd:string"/>
                            <xsd:attribute name="mimetype" type="xsd:string"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string"/>
                            <xsd:attribute name="name" type="xsd:string"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required"/>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="AccountCreated" xml:space="preserve">
    <value>The account has been successfully created. To log in, please confirm your email address by clicking on the activation link sent to your email inbox.</value>
  </data>
    <data name="AddPlaylistJsonOrTxtFile" xml:space="preserve">
    <value>Add .json or .txt file</value>
  </data>
    <data name="AppName" xml:space="preserve">
    <value>YoutubeLinks</value>
  </data>
    <data name="AuthenticationInProgress" xml:space="preserve">
    <value>Authentication in progress</value>
  </data>
    <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="CheckProjectOnGithubText" xml:space="preserve">
    <value>Check project on GitHub</value>
  </data>
    <data name="ConfirmEmail" xml:space="preserve">
    <value>Confirm email</value>
  </data>
    <data name="ConfirmEmailInfo" xml:space="preserve">
    <value>Confirm your email by clicking on the button below.</value>
  </data>
    <data name="CopyToClipboard" xml:space="preserve">
    <value>Copy to clipboard</value>
  </data>
    <data name="CopyUrlToClipboard" xml:space="preserve">
    <value>Copy url to clipboard</value>
  </data>
    <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="CreatedByText" xml:space="preserve">
    <value>Created by Bartłomiej Umiński (FritzTheCat9)</value>
  </data>
    <data name="CreateLink" xml:space="preserve">
    <value>Create Link</value>
  </data>
    <data name="CreatePlaylist" xml:space="preserve">
    <value>Create Playlist</value>
  </data>
    <data name="Creating" xml:space="preserve">
    <value>Creating...</value>
  </data>
    <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
    <data name="DeleteConfirmInfo" xml:space="preserve">
    <value>Do you really want to delete this record? This process cannot be undone.</value>
  </data>
    <data name="DeleteLink" xml:space="preserve">
    <value>Delete Link</value>
  </data>
    <data name="DeletePlaylist" xml:space="preserve">
    <value>Delete Playlist</value>
  </data>
    <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
    <data name="Downloaded" xml:space="preserve">
    <value>Downloaded</value>
  </data>
    <data name="DownloadedLinksCountResults" xml:space="preserve">
    <value>Results ({0})</value>
  </data>
    <data name="Downloading" xml:space="preserve">
    <value>Downloading...</value>
  </data>
    <data name="DownloadLink" xml:space="preserve">
    <value>Download Link</value>
  </data>
    <data name="DownloadPlaylist" xml:space="preserve">
    <value>Download Playlist</value>
  </data>
    <data name="DownloadToMp3" xml:space="preserve">
    <value>Download .mp3 file</value>
  </data>
    <data name="DownloadToMp4" xml:space="preserve">
    <value>Download .mp4 file</value>
  </data>
    <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="ExportPlaylist" xml:space="preserve">
    <value>Export Playlist</value>
  </data>
    <data name="ExportPlaylistToJson" xml:space="preserve">
    <value>Export playlist to .json</value>
  </data>
    <data name="ExportPlaylistToTxt" xml:space="preserve">
    <value>Export playlist to .txt</value>
  </data>
    <data name="Fail" xml:space="preserve">
    <value>Fail</value>
  </data>
    <data name="FileType" xml:space="preserve">
    <value>File Type</value>
  </data>
    <data name="ForbiddenError" xml:space="preserve">
    <value>Forbidden error</value>
  </data>
    <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot Password</value>
  </data>
    <data name="ForgotPasswordEmailSent" xml:space="preserve">
    <value>Forgot password email has been sent.</value>
  </data>
    <data name="Greetings" xml:space="preserve">
    <value>Welcome to Youtube Links App</value>
  </data>
    <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
    <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
    <data name="Importing" xml:space="preserve">
    <value>Importing...</value>
  </data>
    <data name="ImportPlaylist" xml:space="preserve">
    <value>Import Playlist</value>
  </data>
    <data name="ImportPlaylistFromJson" xml:space="preserve">
    <value>Import playlist from .json</value>
  </data>
    <data name="ImportPlaylistInfo" xml:space="preserve">
    <value>Importing playlists from a JSON file is faster compared to importing from a TXT file. This is due to the absence of saved link titles in TXT files, necessitating the retrieval of titles from YouTube during import. Therefore, it's advisable to export/import playlists using JSON rather than TXT files for a smoother and more efficient process.</value>
  </data>
    <data name="InformationConfirmInfo" xml:space="preserve">
    <value>Are you sure you want to perform the selected action? This process cannot be undone.</value>
  </data>
    <data name="InvalidEmailOrToken" xml:space="preserve">
    <value>Invalid Email or Token</value>
  </data>
    <data name="InvalidRoute" xml:space="preserve">
    <value>Sorry, there's nothing at this address.</value>
  </data>
    <data name="Links" xml:space="preserve">
    <value>Links</value>
  </data>
    <data name="LoadedLinks" xml:space="preserve">
    <value>Loaded {0} undownloaded links.</value>
  </data>
    <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
    <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
    <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
    <data name="Modified" xml:space="preserve">
    <value>Modified</value>
  </data>
    <data name="MyPlaylists" xml:space="preserve">
    <value>My Playlists</value>
  </data>
    <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
    <data name="NoMatchingRecordsFound" xml:space="preserve">
    <value>No matching records found</value>
  </data>
    <data name="NotDownloaded" xml:space="preserve">
    <value>Not Downloaded</value>
  </data>
    <data name="NotFound" xml:space="preserve">
    <value>Not found</value>
  </data>
    <data name="NotFoundError" xml:space="preserve">
    <value>Not found error</value>
  </data>
    <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
    <data name="PaginationInfoFormat" xml:space="preserve">
    <value>{first_item}-{last_item} of {all_items}</value>
  </data>
    <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
    <data name="Playlists" xml:space="preserve">
    <value>Playlists</value>
  </data>
    <data name="Private" xml:space="preserve">
    <value>Private</value>
  </data>
    <data name="PrivatePlaylistDownloadInfo" xml:space="preserve">
    <value>On user playlist only not downloaded links are loaded (you can mark link as downloaded or undownloaded).</value>
  </data>
    <data name="Processing" xml:space="preserve">
    <value>Processing...</value>
  </data>
    <data name="Public" xml:space="preserve">
    <value>Public</value>
  </data>
    <data name="PublicPlaylistDownloadInfo" xml:space="preserve">
    <value>On public playlist all links are being loaded.</value>
  </data>
    <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
    <data name="RepeatPassword" xml:space="preserve">
    <value>Repeat Password</value>
  </data>
    <data name="ResendConfirmationEmail" xml:space="preserve">
    <value>Resend confirmation email</value>
  </data>
    <data name="ResendConfirmationEmailSent" xml:space="preserve">
    <value>Confirmation email has been sent.</value>
  </data>
    <data name="ResetPassword" xml:space="preserve">
    <value>Reset Password</value>
  </data>
    <data name="ResetPasswordSuccess" xml:space="preserve">
    <value>Password has been successfully reset. Now log in using your new password.</value>
  </data>
    <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
    <data name="RowsPerPage" xml:space="preserve">
    <value>Rows per page</value>
  </data>
    <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
    <data name="SendForgotPasswordEmail" xml:space="preserve">
    <value>Send forgot password email</value>
  </data>
    <data name="ServerError" xml:space="preserve">
    <value>Server error</value>
  </data>
    <data name="SetAllPlaylistLinksAsDownloaded" xml:space="preserve">
    <value>Set All Playlist Links As Downloaded</value>
  </data>
    <data name="SetAllPlaylistLinksAsUndownloaded" xml:space="preserve">
    <value>Set All Playlist Links As Undownloaded</value>
  </data>
    <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
    <data name="SuccessfulEmailConfirmation" xml:space="preserve">
    <value>Your email has been successfully confirmed.</value>
  </data>
    <data name="SwitchToDarkTheme" xml:space="preserve">
    <value>Switch to Dark Theme</value>
  </data>
    <data name="SwitchToLightTheme" xml:space="preserve">
    <value>Switch to Light Theme</value>
  </data>
    <data name="SwitchToSystemTheme" xml:space="preserve">
    <value>Switch to System Theme</value>
  </data>
    <data name="SwitchViewToGrid" xml:space="preserve">
    <value>Switch view to grid</value>
  </data>
    <data name="SwitchViewToTable" xml:space="preserve">
    <value>Switch view to table</value>
  </data>
    <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
    <data name="UnauthorizedError" xml:space="preserve">
    <value>Unauthorized error</value>
  </data>
    <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
    <data name="UpdateLink" xml:space="preserve">
    <value>Update Link</value>
  </data>
    <data name="UpdatePlaylist" xml:space="preserve">
    <value>Update Playlist</value>
  </data>
    <data name="Updating" xml:space="preserve">
    <value>Updating...</value>
  </data>
    <data name="Url" xml:space="preserve">
    <value>Url</value>
  </data>
    <data name="UserName" xml:space="preserve">
    <value>UserName</value>
  </data>
    <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
    <data name="ValidationError" xml:space="preserve">
    <value>Validation error</value>
  </data>
    <data name="VideoId" xml:space="preserve">
    <value>VideoId</value>
  </data>
    <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
    <data name="YoutubeVideo" xml:space="preserve">
    <value>Youtube Video</value>
  </data>
</root>